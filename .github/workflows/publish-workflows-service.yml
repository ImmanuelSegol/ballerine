name: Publish workflows-service image

on:
  workflow_dispatch:
    inputs:
      deploy_to_dev:
        type: choice
        description: 'Deploy to Development Environment'
        required: true
        default: 'false'
        options: 
          - 'false'
          - 'true'
  push:
    paths:
      # Run this pipeline only if there are changes in specified path
      - 'services/workflows-service/**'
    branches:
      - dev
      - test
      - prod
      - staging
      - sb
      - demo

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/workflows-service

jobs:      
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          fetch-tags: 1
          
      - name: Install jq
        run: sudo apt-get install jq

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,arm'

      - name: Cache Docker layers
        id: cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-
  

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set outputs
        id: get_version
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHA_SHORT=$SHORT_SHA" >> $GITHUB_ENV
          echo "::set-output name=sha_short::$SHORT_SHA"

      - name: Print the version
        run: echo "The version is ${{ steps.get_version.outputs.sha_short }}"

      - name: Extract metadata for Docker images
        id: docker_meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.ref_name }}
            type=raw,value=${{ steps.get_version.outputs.sha_short }}-${{ github.ref_name }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'prod') }}
            type=sha,format=short

      - name: Use metadata for further processing
        run: |
          echo "Metadata: ${{ steps.docker_meta.outputs.tags }}"

      - name: Build and push Docker image 
        uses: docker/build-push-action@v4
        with:
          context: services/workflows-service
          platforms: linux/amd64
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Scan Docker Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}'
          format: 'table'
          ignore-unfixed: true
          exit-code: 1
          vuln-type: 'os,library'
          severity: 'CRITICAL'

  update-helm-chart:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          fetch-tags: 1

      - name: Set outputs
        id: get_version
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHA_SHORT=$SHORT_SHA" >> $GITHUB_ENV
          echo "::set-output name=sha_short::$SHORT_SHA"

      - name: Checkout cloud-infra-config repository
        uses: actions/checkout@v4
        with:
          repository: ballerine-io/cloud-infra-config
          token: ${{ secrets.GIT_TOKEN }}
          ref: iamops/blue-green
          fetch-depth: 1
          sparse-checkout: |
            kubernetes/helm/wf-service/${{ github.ref_name }}-custom-values.yaml
          sparse-checkout-cone-mode: false

      - name: Update workdlow-service image version in the HelmChart
        uses: fjogeleit/yaml-update-action@main
        with:
          repository: ballerine-io/cloud-infra-config
          branch: iamops/blue-green
          commitChange: true
          message: 'Update wf-service image Version to sha-${{ steps.get_version.outputs.sha_short }} - (Commit hash: ${{ github.sha }}, commit message: ${{ github.event.head_commit.message }})'
          token: ${{ secrets.GIT_TOKEN }}
          valueFile: "kubernetes/helm/wf-service/${{ github.ref_name }}-custom-values.yaml"
          propertyPath: "image.tag"
          value: "${{ steps.get_version.outputs.sha_short }}-${{ github.ref_name }}"

      - name: Deploy from branch - Update dev env in the HelmChart
        continue-on-error: true
        if: ${{ failure() && inputs.deploy_to_dev == 'true'}}
        uses: fjogeleit/yaml-update-action@main
        with:
          repository: ballerine-io/cloud-infra-config
          branch: iamops/blue-green
          commitChange: true
          message: 'Update wf-service image Version to dev environment sha-${{ steps.get_version.outputs.sha_short }} - (Commit hash: ${{ github.sha }}, commit message: ${{ github.event.head_commit.message }})'
          token: ${{ secrets.GIT_TOKEN }}
          valueFile: "kubernetes/helm/wf-service/dev-custom-values.yaml"
          propertyPath: "image.tag"
          value: "${{ steps.get_version.outputs.sha_short }}-${{ github.ref_name }}"


  release:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          fetch-tags: 1
      - name: Get version
        id: version
        run: echo ::set-output name=tag::$(git tag -l "$(echo workflow-service)*" | sort -V -r | head -n 1)
      - name: Bump version
        id: bump-version
        uses: ./.github/actions/bump-version
        with:
          tag: ${{ steps.version.outputs.tag }}
      - name: Release
        run: gh release create ${{ steps.bump-version.outputs.version }} --notes-start-tag ${{ steps.version.outputs.tag }}

  build-and-push-ee-image:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 1
          token: ${{ secrets.SUBMODULES_TOKEN }}

      - name: Set outputs
        id: get_version
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHA_SHORT=$SHORT_SHA" >> $GITHUB_ENV
          echo "::set-output name=sha_short::$SHORT_SHA"

      - name: Print the version
        run: echo "The version was ${{ steps.get_version.outputs.sha_short }}"

      - name: Checkout submodule branch
        run: |
          git submodule update --init --recursive
          cd services/workflows-service/prisma/data-migrations
          git checkout ${{ github.ref_name }}
          cd ../../..

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,arm'

      - name: Cache Docker layers
        id: cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for ee Docker images
        id: eemeta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-ee
          tags: |
            type=raw,value=${{ github.ref_name }}
            type=raw,value=${{ steps.get_version.outputs.sha_short }}-${{ github.ref_name }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'prod') }}
            type=sha,format=short

      - name: Build and push ee Docker image
        uses: docker/build-push-action@v4
        with:
          context: services/workflows-service
          file: services/workflows-service/Dockerfile.ee
          platforms: linux/amd64
          push: true
          cache-from: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-ee:${{ github.ref_name }}'
          tags: ${{ steps.eemeta.outputs.tags }}
          build-args: |
            BASE_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.sha_short }}-${{ github.ref_name }}
