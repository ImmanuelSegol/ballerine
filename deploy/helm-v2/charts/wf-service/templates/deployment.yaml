apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wf-service.fullname" . }}
  labels:
    {{- include "wf-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: {{ .Values.deploymentStrategy.type }}
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  minReadySeconds: 30
  selector:
    matchLabels:
      {{- include "wf-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "wf-service.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: {{ .Values.restartPolicy }}
      serviceAccountName: {{ include "wf-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 90
      {{- if .Values.migration }}
      initContainers:
        - name: wait-for-migrations
          # image: "ghcr.io/groundnuty/k8s-wait-for:v1.6"
          image: pegasystems/k8s-wait-for:latest
          imagePullPolicy: IfNotPresent
          args: 
          - "job"
          - "{{ "init" }}-{{ include "wf-service.fullname" . }}"
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          lifecycle:
            preStop:
              exec:
                command: ["sleep","30"]
          command: {{ .Values.image.command | toYaml | nindent 12 }}
          {{- with .Values.env }}
          env:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "wf-service.fullname" . }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/_health/live
              port: http
            periodSeconds: 10
            initialDelaySeconds: 5
            successThreshold: 1
            failureThreshold: 2
            terminationGracePeriodSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/v1/_health/ready
              port: http
            periodSeconds: 15
            initialDelaySeconds: 10
            successThreshold: 1
            failureThreshold: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}


