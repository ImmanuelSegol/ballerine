{{- if .Values.websocket.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: "Deployment configuration for the websocketService"
    name: {{ .Values.websocketService.nameOverride }}
    namespace: {{ .Release.Namespace | quote }}
    labels:
      app: {{ .Values.websocketService.nameOverride }}
spec:
    replicas: {{ .Values.websocketService.replicas }}
    {{- if .Values.websocketService.strategyType }}
    strategy:
      type: {{ .Values.websocketService.strategyType }}
    {{- end }}
    {{- if .Values.websocketService.updateStrategy }}
      rollingUpdate:
        {{- if .Values.websocketService.updateStrategy.maxSurge }}
        maxSurge: {{ .Values.websocketService.updateStrategy.maxSurge}}
        {{- end }}
        {{- if .Values.websocketService.updateStrategy.maxUnavailable }}
        maxUnavailable: {{ .Values.websocketService.updateStrategy.maxUnavailable }}
        {{- end }}
    {{- end }}
    selector:
        matchLabels:
            app: {{ .Values.websocketService.nameOverride }}
    template:
        metadata:
            labels:
                app: {{ .Values.websocketService.nameOverride }}
        spec:
            {{- with .Values.nodeSelector }}
            nodeSelector:
            {{- toYaml . | nindent 8 }}
            {{- end }}
            containers:
            - name: {{ .Values.websocketService.nameOverride }}
              image: "{{ .Values.websocketService.image.registry }}/{{ .Values.websocketService.image.repository }}:{{ .Values.websocketService.image.tag }}"
              imagePullPolicy: {{ .Values.websocketService.image.pullPolicy }}
              command: [ "node", "server.js" ]
              env:
                - name: DATABASE_HOST
                  value: localhost
                - name: DATABASE_USERNAME
                  value: user
                - name: DATABASE_PASSWORD
                  value: password
                - name: DATABASE_PORT
                  value: "5432"
                - name: DATABASE_NAME
                  value: database
          ports:
            - containerPort: 3000
          volumeMounts:
          - name: websocket-volume
            mountPath: /app/data
          volumes:
          - name: websocket-volume
            emptyDir: {}
          
              envFrom:
                - configMapRef:
                    name: {{ .Values.websocketService.nameOverride }}
            {{- if .Values.websocketService.image.pullSecrets}}
            imagePullSecrets:
              - name: {{ .Values.websocketService.image.pullSecrets }}
            {{- end }}
{{- end }}
